function canStartFunc()
	print("canStart")
	spaceStage = 1
	canStart = true
end
function init(self)
	gametime = 0
	self.frame = 0
	an = 0
	go.set("/logo#logo", "tint.w", 0)
	go.set("/title", "scale.y", 0)
	go.set("/cock#pit", "tint.w", 0)
	go.set("/station#station", "tint.w", 0)
	go.set("/foreground#sprite", "tint.w", 0)
	go.set("/background#sprite", "tint.w", 0)
	
end
function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	self.frame = self.frame + 1
	gametime = gametime + dt
	--print(gametime)
	if gametime > 1.0 and self.frame > 30 and an == 0 then
		an = 1
		go.animate("/logo#logo", "tint.w", go.PLAYBACK_ONCE_FORWARD, 40, go.EASING_INSINE, 5)
		print("ye")
	elseif gametime > 3.0 and self.frame > 90 and an == 1 then
		an = 2
		go.animate("/logo", "position.y", go.PLAYBACK_ONCE_FORWARD, 615, go.EASING_INSINE, 1)
		go.animate("/logo#logo", "scale.y", go.PLAYBACK_ONCE_FORWARD, 0.5, go.EASING_INSINE, 1)
		go.animate("/logo#logo", "scale.x", go.PLAYBACK_ONCE_FORWARD, 0.5, go.EASING_INSINE, 1)
		go.animate("/title", "scale.y", go.PLAYBACK_ONCE_FORWARD, 8, go.EASING_INSINE, 0.07)
	elseif gametime > 4.0 and self.frame > 120 and an == 2 then
		an = 3
		go.animate("/title", "position.y", go.PLAYBACK_ONCE_FORWARD, 460, go.EASING_INSINE, 0.07)
		msg.post("/start#start1", "start")
		timer.delay(2, false, canStartFunc)
		
	
	end
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed

end
