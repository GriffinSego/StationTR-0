function startify()--	timer.delay(6, false, startify)
	canStart = true
	pausable = true
	msg.post("/endscreen", "disable")
	hej()
end
function option(o)
	msg.post("/dialogue#dialogue", "option", { option = o } )
end
function interact()
	if scene == "landing" then
		print("no")
	end
end
function hej()
	msg.post("/station", "enable")
	msg.post("/cock", "enable")
	
	msg.post("/endscreen#gui", "disable")
	canStart = true
	pausable = true
	msg.post("/endscreen", "disable")
	msg.post("/station#station", "play_animation", { id = hash("station-open") })
	timer.delay(6, false, och)
end
function och()
	msg.post("/station", "disable")
	msg.post("/cock", "disable")
	msg.post("/background", "enable")
	msg.post("/foreground", "enable")
	sound.stop("/bk#menu")
	sound.stop("/bk#won")
	sound.stop("/bk#lost")
	
	sound.play("/bk#sound")
	timer.delay(1, false, valkommen)
end
function valkommen()
	canMove = true
	go.set("/foreground#sprite", "tint.w", 1)
	go.set("/background#sprite", "tint.w", 1)
	go.set("/player#sprite", "tint.w", 1)
	
end
function init(self)
	
	print("loaded main.script")
	msg.post(".", "acquire_input_focus")
	msg.post("@render:", "use_fixed_fit_projection", { near = -10, far = 10 })
	gameStarted = false
	canMove = false
	pos = vmath.vector3()
	scene = 0
	input = vmath.vector3()
	--pos = vmath.vector3(900, 145, 0)
	pos = vmath.vector3(900, 145, 0)
	playerspeed = 1000
	spaceStage = 0 --0: n/a, 1: start, 2: interact, 3: n/a interact
	canStart = false
	pausable = true
	interactType = 0 --0 for signpost 1 for trashcan 2 for money 3 for person 4 for inspect get info 5 for elevator 6 for easter egg
	interactContent = ""
	interactName = ""
	dobletogle = math.floor(os.clock() * 10)
	isUi = false
	pausemenu = false
	touches = 0
	rotations = 0.0
	slowDeath = false
	
	sound.play("/bk#menu")
	msg.post("/pausemenu", "disable")
	msg.post("/endscreen#gui", "disable")
	
	msg.post("/sign", "disable")
	go.set("/player#sprite", "tint.w", 0)
	--print(pos)
	
end
function update(self, dt)
	--print(tostring(vmath.length(input) > 0).." input")
	if slowDeath then
		pos = vmath.vector3(pos.x, pos.y + 0.1, pos.z)
		rotations = rotations + 0.1
		go.set("/player", "euler.z", rotations)
	end
		
	if vmath.length(input) > 0 then
		pos.x = pos.x + input.x * dt * playerspeed
		pos.y = pos.y + input.y * dt * playerspeed
		--print(pos)
	end
	--print(pos)
	
if pos.y > 658 then
	msg.post("/player#script", "top")
	print("top")
	pos.y = 658
end
if pos.x < 30 then
	msg.post("/player#script", "left")
	print("left")
	pos.x = 30
end
if pos.y < 64 then
	msg.post("/player#script", "down")
	print("down")
	pos.y = 64
end
if pos.x > 1248 then
	msg.post("/player#script", "right")
	print("right")
	pos.x = 1248
end
	
	go.set_position(pos, "player")
	input = vmath.vector3()
end
function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed then
		--print("Touch!")
		touches = touches + 1
		if touches > 50 then
			msg.post("/dialogue#dialogue", "callEnding", { won = true, name = "click" })
		end
	elseif action_id == hash("space") and canStart then
		--print("space")
		if gameStarted == false then
			gameStarted = true
			msg.post("/start#start1", "stop")
			msg.post("/hub#hub", "start")
			go.set("/start#start", "color", vmath.vector4(0,0,0,0))
			go.set("/start", "position.x", -100)
			go.set("/start", "position.y", -100)
			go.animate("/logo", "position.y", go.PLAYBACK_ONCE_FORWARD, 1000, go.EASING_INSINE, 1)
			go.animate("/title", "scale.y", go.PLAYBACK_ONCE_FORWARD, 0, go.EASING_INSINE, 0.07)
			go.animate("/bk#bg", "tint.w", go.PLAYBACK_ONCE_FORWARD, 0, go.EASING_INSINE, 5)
			msg.post("/background#sprite", "play_animation", { id = hash("bg_landing") })
			msg.post("/foreground#sprite", "play_animation", { id = hash("fg_landing") })
			go.set("/cock#pit", "tint.w", 1)
			go.set("/station#station", "tint.w", 1)
			timer.delay(1, false, hej)
		else
			
			msg.post("/player#script", "interact")
		end
	elseif action_id == hash("w") and canMove then
		input.y = 1
		--print("w")
	elseif action_id == hash("a") and canMove then
		input.x = -1
		--print("a")
	elseif action_id == hash("s") and canMove then
		input.y = -1
		--print("s")
	elseif action_id == hash("d") and canMove then
		input.x = 1
		--print("d")
	elseif action_id == hash("esc") and isUi == false and pausemenu == false and math.floor(os.clock() * 10) > dobletogle then
		--display main menu
		pausable = false
		msg.post("/sign", "disable")
		
		msg.post("/pausemenu", "enable")
		pausemenu = true
		dobletogle = math.floor(os.clock() * 10)
	elseif action_id == hash("esc") and pausemenu == true and math.floor(os.clock() * 10) > dobletogle then
		msg.post("/pausemenu", "disable")
		
		msg.post("/sign", "disable")
		--msg.post("/invpanel", "disable")		
		isUi = false
		pausemenu = false
		dobletogle = math.floor(os.clock() * 10) + 1
		
	elseif action_id == hash("esc") and isUi and pausemenu == false then
		msg.post("/sign", "disable")
		isUi = false
		dobletogle = math.floor(os.clock() * 10) + 1
	elseif action_id == hash("debug") then
		print(pos)
	elseif action_id == hash("one") then
		option(1)
	elseif action_id == hash("two") then
		option(2)
	elseif action_id == hash("tri") then
		option(3)
	elseif action_id == hash("fyra") then
		option(4)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("regen") then
		slowDeath = false
		
		gameStarted = false
		canMove = false
		scene = 0
		input = vmath.vector3()
		pos = vmath.vector3(900, 145, 0)
		canStart = true
		dobletogle = math.floor(os.clock() * 10)
		pausemenu = false
		

		msg.post("/pausemenu", "disable")
		msg.post("/dialogue", "disable")
		msg.post("/background", "disable")
		msg.post("/foreground", "disable")
		
		msg.post("/player#sprite", "regen")
		msg.post("/dialogue#dialogue", "regen")
		
		msg.post("/sign", "disable")
		go.set("/player#sprite", "tint.w", 0)
	elseif message_id == hash("moveable") then
		print(message.moveable)
		if message.moveable == true then
			print("moveable")
			canMove = true
			print("msg debug: NO ERR SUCCESS")
			
		elseif message.moveable == false then
			print("not moveable")
			canMove = false
			print("msg debug: YES ERR SUCCESS")
		
		else
			print("error 1")
			print("msg debug: value:"..message.moveable.."and message type:"..type(message.moveable).." ERR")
		end
	elseif message_id == hash("inspace") then
		slowDeath = true
	end
end




		